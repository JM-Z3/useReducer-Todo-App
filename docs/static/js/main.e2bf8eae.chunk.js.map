{"version":3,"sources":["reducer.js","TodoApp.js","index.js"],"names":["reducer","state","action","type","payload","filter","todo","id","map","done","init","JSON","parse","localStorage","getItem","TodoApp","useReducer","dispatch","useState","inputValue","setInputValue","useEffect","setItem","stringify","newState","Date","getTime","desc","className","i","onClick","todoId","onSubmit","e","preventDefault","onChange","target","value","ReactDOM","render","document","querySelector"],"mappings":"iLACaA,EAAU,WAAyB,IAAxBC,EAAuB,uDAAf,GAAIC,EAAW,uCAC3C,OAAQA,EAAOC,MACX,IAAK,MACD,MAAM,GAAN,mBAAWF,GAAX,CAAkBC,EAAOE,UAE7B,IAAK,SACD,OAAOH,EAAMI,QAAO,SAAAC,GAAI,OAAIA,EAAKC,KAAOL,EAAOE,WAEnD,IAAK,SACD,OAAOH,EAAMO,KAAK,SAAAF,GACd,OAAGA,EAAKC,KAAOL,EAAOE,QAEX,2BACAE,GADP,IAEIG,MAAOH,EAAKG,OAGTH,KAMnB,QACI,OAAOL,I,OCtBbS,EAAO,WACT,OAAOC,KAAKC,MAAMC,aAAaC,QAAQ,WAAa,IAI3CC,EAAU,WAAO,IAAD,EAECC,qBAAWhB,EAAS,GAAIU,GAFzB,mBAElBT,EAFkB,KAEXgB,EAFW,OAIWC,mBAAS,IAJpB,mBAIlBC,EAJkB,KAINC,EAJM,KAMzBC,qBAAU,WACNR,aAAaS,QAAQ,QAASX,KAAKY,UAAUtB,MAE9C,CAACA,IAEJ,IAKMuB,EAAW,CACbjB,IAAI,IAAIkB,MAAOC,UACfC,KAAMR,EACNV,MAAM,GAiCV,OACI,gCACI,oDACA,uBACA,sBAAKmB,UAAU,MAAf,UACI,qBAAKA,UAAU,QAAf,SACI,oBAAIA,UAAU,8BAAd,SAEQ3B,EAAMO,KAAK,SAACF,EAAMuB,GACd,OAAO,qBAAkBD,UAAU,kBAA5B,UACK,oBAAGA,UAAS,UAAMtB,EAAKG,MAAQ,YAAcqB,QAAS,kBAnBxEC,EAmB2FzB,EAAKC,QAdlHU,EAJe,CACXd,KAAM,SACNC,QAAQ2B,IAHK,IAACA,GAmBkB,UAAoFF,EAAE,EAAtF,KAA2FvB,EAAKqB,QAChG,wBAAQC,UAAU,iBAAiBE,QAAS,kBA5B9DC,EA4BiFzB,EAAKC,QAvBxGU,EAJe,CACXd,KAAM,SACNC,QAAS2B,IAHI,IAACA,GA4BkB,sBAFIzB,EAAKC,WAUrC,sBAAKqB,UAAU,QAAf,UACI,+CACA,uBAEA,uBAAMI,SAnDD,SAACC,GAClBA,EAAEC,iBAMFjB,EAJe,CACXd,KAAM,MACNC,QAASoB,IAGbJ,EAAc,KA2CF,UACI,uBACIQ,UAAU,eACVO,SAnEE,SAACF,GACvBb,EAAca,EAAEG,OAAOC,QAmEHA,MAAOlB,IAGX,wBAAQS,UAAU,sCAAlB,8B,MCrFxBU,IAASC,OAAO,cAAC,EAAD,IAAaC,SAASC,cAAc,Y","file":"static/js/main.e2bf8eae.chunk.js","sourcesContent":["\r\nexport const reducer = (state = [], action) => {\r\n    switch (action.type) {\r\n        case 'add':\r\n            return [...state, action.payload];\r\n\r\n        case 'delete':\r\n            return state.filter(todo => todo.id !== action.payload);\r\n\r\n        case 'toggle':\r\n            return state.map( todo => {\r\n                if(todo.id === action.payload) {\r\n\r\n                    return {\r\n                        ...todo,\r\n                        done: !todo.done\r\n                    }\r\n                } else {\r\n                    return todo;\r\n                }\r\n            })\r\n            \r\n       \r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import React, { useEffect, useReducer, useState } from 'react'\r\nimport { reducer } from './reducer'\r\n\r\nconst init = () => {\r\n    return JSON.parse(localStorage.getItem('state')) || [];\r\n}\r\n\r\n\r\nexport const TodoApp = () => {\r\n    \r\n    const [state, dispatch] = useReducer(reducer, [], init);\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('state', JSON.stringify(state));\r\n        \r\n    }, [state])\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n        \r\n    }\r\n\r\n    const newState = {\r\n        id: new Date().getTime(),\r\n        desc: inputValue,\r\n        done: false \r\n    }\r\n    \r\n    \r\n    \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        \r\n        const action = {\r\n            type: 'add',\r\n            payload: newState\r\n        }\r\n        dispatch(action);\r\n        setInputValue('');\r\n    }\r\n\r\n    const handleDelete = (todoId) => {\r\n        const action = {\r\n            type: 'delete',\r\n            payload: todoId\r\n        }\r\n        dispatch(action)\r\n    }\r\n\r\n    const handleToggle = (todoId) => {\r\n        const action = {\r\n            type: 'toggle',\r\n            payload:todoId\r\n        }\r\n        dispatch(action)\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>Aplicacion Testing</h1>\r\n            <hr />\r\n            <div className='row'>\r\n                <div className='col-7'>\r\n                    <ul className='list-group list-group-flush'>\r\n                        {\r\n                            state.map( (todo, i) => {\r\n                                return <li key={todo.id} className='list-group-item'>\r\n                                            <p className={ `${todo.done && 'complete'}`} onClick={() => handleToggle(todo.id)}>{i+1}. {todo.desc}</p>\r\n                                            <button className='btn btn-danger' onClick={() => handleDelete(todo.id)}>Delete</button>\r\n                                    </li>\r\n                            })\r\n                        }\r\n                    </ul>\r\n\r\n                </div>\r\n\r\n                <div className='col-5'>\r\n                    <h4>Agregar To do</h4>\r\n                    <hr/>\r\n\r\n                    <form onSubmit={handleSubmit}>\r\n                        <input \r\n                            className='form-control' \r\n                            onChange={handleInputChange}\r\n                            value={inputValue}>\r\n                        </input>\r\n\r\n                        <button className='btn btn-outline-primary mt-1 col-12'>Add</button>\r\n                    </form>\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import ReactDOM from 'react-dom'\r\nimport { TodoApp } from './TodoApp'\r\n\r\nimport './index.css'\r\n\r\nReactDOM.render(<TodoApp />, document.querySelector('#root'));"],"sourceRoot":""}